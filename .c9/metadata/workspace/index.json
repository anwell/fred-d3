{"filter":false,"title":"index.json","tooltip":"/index.json","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":15}},"text":"<!DOCTYPE html>"},{"action":"insertText","range":{"start":{"row":0,"column":15},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":63,"column":0}},"lines":["<meta charset=\"utf-8\">","<style>","","text {","  font: 10px sans-serif;","}","","</style>","<body>","<script src=\"http://d3js.org/d3.v3.min.js\"></script>","<script>","","var diameter = 960,","    format = d3.format(\",d\"),","    color = d3.scale.category20c();","","var bubble = d3.layout.pack()","    .sort(null)","    .size([diameter, diameter])","    .padding(1.5);","","var svg = d3.select(\"body\").append(\"svg\")","    .attr(\"width\", diameter)","    .attr(\"height\", diameter)","    .attr(\"class\", \"bubble\");","","d3.json(\"flare.json\", function(error, root) {","  var node = svg.selectAll(\".node\")","      .data(bubble.nodes(classes(root))","      .filter(function(d) { return !d.children; }))","    .enter().append(\"g\")","      .attr(\"class\", \"node\")","      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });","","  node.append(\"title\")","      .text(function(d) { return d.className + \": \" + format(d.value); });","","  node.append(\"circle\")","      .attr(\"r\", function(d) { return d.r; })","      .style(\"fill\", function(d) { return color(d.packageName); });","","  node.append(\"text\")","      .attr(\"dy\", \".3em\")","      .style(\"text-anchor\", \"middle\")","      .text(function(d) { return d.className.substring(0, d.r / 3); });","});","","// Returns a flattened hierarchy containing all leaf nodes under the root.","function classes(root) {","  var classes = [];","","  function recurse(name, node) {","    if (node.children) node.children.forEach(function(child) { recurse(node.name, child); });","    else classes.push({packageName: name, className: node.name, value: node.size});","  }","","  recurse(null, root);","  return {children: classes};","}","","d3.select(self.frameElement).style(\"height\", diameter + \"px\");",""]},{"action":"insertText","range":{"start":{"row":63,"column":0},"end":{"row":63,"column":9}},"text":"</script>"}]}]]},"ace":{"folds":[],"scrolltop":39,"scrollleft":0,"selection":{"start":{"row":63,"column":9},"end":{"row":63,"column":9},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":1,"state":"start","mode":"ace/mode/json"}},"timestamp":1409190623026,"hash":"de00c30b183d5ce1e6a879d2180b7089d588ff14"}